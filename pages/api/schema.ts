const schema = {
	body: [
		{
			id: "text-block-1",
			component: "layout",
			type: "text",
			defaultValue: "This text will be displayed as a text block",
			page: 1,
			width: "full",
			conditions: [],
			display: true,
		},
		{
			component: "layout",
			type: "divider",
			id: "divider-block-1",
			page: 1,
			display: true,
			width: "full",
			conditions: [],
		},
		{
			component: "layout",
			type: "image",
			page: 1,
			defaultValue:
				"https://byteforms.s3.us-east-1.amazonaws.com/1/30/image_c13JuIQCNxbvY_2r7e0ah_carousel-3.jpg",
			id: "image-1",
			instructions: "Image caption (if any)",
			display: true,
		},
		{
			component: "input",
			type: "text",
			label: "Text Block",
			placeholder: "Short Text Single Line",
			id: "short-text",
			page: 1,
			required: true,
			minLength: 5,
			maxLength: 25,
			instructions: "Field Instructions (if any)",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [
				{
					condition: "starts with",
					conditionValue: "Some Text",
					action: "hidden",
					actionElement: "phone-no-block",
				},
				{
					condition: "starts with",
					conditionValue: "Other Text",
					action: "shown",
					actionElement: "phone-no-block",
				},
				{
					condition: "contains",
					conditionValue: "Some Text",
					action: "required",
					actionElement: "long-text",
				},
				{
					condition: "does not contain",
					conditionValue: "Some Text",
					action: "optional",
					actionElement: "long-text",
				},
			],
		},
		{
			component: "input",
			type: "textarea",
			label: "Multiline Text Block",
			placeholder: "Multi Line Text ",
			id: "long-text",
			page: 1,
			required: true,
			minLength: null,
			maxLength: null,
			instructions: "Field Instructions (if any)",
			defaultValue: "Field's default value (if any)",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
		},
		{
			component: "input",
			type: "number",
			label: "Number Block",
			placeholder: "Number INput",
			id: "number-block",
			page: 1,
			required: true,
			min: 0,
			max: null,
			defaultValue: null,
			instructions: "Field Instructions (if any)",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [
				{
					condition: "equals",
					conditionValue: 5,
					action: "hidden",
					actionElement: "short-text",
				},
				{
					condition: "does not equal",
					conditionValue: 5,
					action: "shown",
					actionElement: "short-text",
				},
				{
					condition: "greater than or equal to",
					conditionValue: 5,
					action: "hidden",
					actionElement: "url-block",
				},
				{
					condition: "less than or equal to",
					conditionValue: 6,
					action: "required",
					actionElement: "phone-no-block",
				},
				{
					condition: "greater than",
					conditionValue: 5,
					action: "hidden",
					actionElement: "signature-block",
				},
				{
					condition: "less than",
					conditionValue: 5,
					action: "required",
					actionElement: "signature-block",
				},
			],
		},
		{
			component: "input",
			type: "tel",
			label: "Phone Number Input",
			placeholder: "Phone Number Input",
			page: 1,
			defaultValue: null,
			includeCountryCode: true,
			minLength: 5,
			maxLength: 15,
			id: "phone-no-block",
			instructions: "Phone Input Instructions",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [
				{
					condition: "is empty",
					action: "hidden",
					actionElement: "url-block",
				},
				{
					condition: "is not empty",
					action: "shown",
					actionElement: "url-block",
				},
			],
			required: false,
		},
		{
			component: "input",
			type: "url",
			label: "Link Number Input",
			placeholder: "Link Number Input",
			page: 1,
			defaultValue: null,
			minLength: 5,
			maxLength: 15,
			id: "url-block",
			instructions: "Link Input Instructions",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			required: false,
		},
		{
			component: "input",
			type: "email",
			label: "Email Input",
			placeholder: "Email Input",
			page: 1,
			defaultValue: null,
			minLength: 5,
			maxLength: 15,
			id: "email-block",
			instructions: "Email Input Instructions",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			required: false,
		},
		{
			component: "input",
			type: "rating",
			label: "Rating",
			placeholder: "Rating",
			page: 1,
			defaultValue: 2,
			maxLength: 5,
			id: "rating-block",
			instructions: "Rating Input Instructions",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			required: false,
		},
		{
			component: "input",
			type: "range",
			label: "Range",
			placeholder: "Range",
			page: 1,
			defaultValue: 2,
			min: 1,
			max: 10,
			id: "range-block",
			instructions: "Range Input Instructions",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			required: false,
		},
		{
			component: "input",
			type: "checkbox",
			label: "Checkbox",
			placeholder: "Checkbox",
			page: 1,
			checked: false,
			id: "checkbox-block",
			instructions: "Checkbox Input Instructions",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
		},
		{
			component: "input",
			type: "switch",
			label: "Checkbox",
			placeholder: "Switch",
			page: 1,
			checked: false,
			id: "switch-block",
			instructions: "Switch Input Instructions",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
		},
		{
			component: "input",
			type: "signature",
			label: "Signature",
			placeholder: "Signature",
			page: 1,
			required: false,
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			instructions: "Signature Block Instructions",
			id: "signature-block",
		},
		{
			component: "input",
			type: "datetime-local",
			label: "Datetime",
			placeholder: "Datetime",
			page: 1,
			id: "datetime",
			required: false,
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			instructions: "Date Time Block Instructions",
		},
		{
			component: "input",
			type: "date",
			label: "Date",
			placeholder: "Date",
			page: 1,
			id: "date",
			required: false,
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "half",
			instructions: "Date Block Instructions",
		},
		{
			component: "input",
			type: "time",
			label: "Time",
			placeholder: "Time",
			page: 1,
			id: "time",
			required: false,
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "half",
			instructions: "Time Block Instructions",
		},
		{
			component: "input",
			type: "file",
			label: "File",
			placeholder: "File",
			page: 1,
			max: 10000,
			maxLength: 1,
			id: "file-block",
			multiple: true,
			required: false,
			display: true,
			accept: "image/*",
			readOnly: false,
			hideFieldLabel: false,
			width: "half",
			instructions: "File Block Instructions",
		},
		{
			component: "input",
			type: "radio",
			label: "Radio Block",
			placeholder: "Radio Input",
			id: "radio-block",
			page: 1,
			required: true,
			instructions: "Field Instructions (if any)",
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			options: ["Option 1", "Option 2"],
		},
		{
			component: "input",
			type: "select",
			label: "Dropdown Block",
			placeholder: "Dropdown Input",
			id: "select-block",
			page: 1,
			required: true,
			instructions: "Field Instructions (if any)",
			multiple: false,
			display: true,
			readOnly: false,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			options: ["Option 1", "Option 2"],
		},
		{
			component: "special_input",
			type: "google_analytics",
			label: "Google Analytics",
			instructions:
				"Google Analytics tracking code will be added to your form.",
			title: "Google Analytics",
			display: false,
			hideFieldLabel: false,
			placeholder: "Google Analytics",
			page: 1,
			id: "google-analytics",
			trackingId: "G-JR9S3YMRM4",
		},
		{
			component: "special_input",
			type: "cloudflare_turnstile",
			allowOnlyOne: true,
			label: "Secured with Cloudflare",
			title: "Secured with Cloudflare",
			placeholder: "Secured with Cloudflare",
			display: true,
			page: 1,
			id: "cloudflare-turnstile",
		},
		{
			component: "special_input",
			type: "recaptcha",
			allowOnlyOne: true,
			label: "Secured with ReCaptcha",
			title: "Secured with ReCaptcha",
			placeholder: "Secured with ReCaptcha",
			page: 1,
			display: true,
			id: "recaptcha",
			width: "full",
			conditions: [],
		},
		{
			component: "special_input",
			type: "calendly",
			label: "Schedule a meeting",
			instructions:
				"You can schedule a meeting with me by clicking the button above.",
			title: "Schedule a meeting",
			placeholder: "Schedule a meeting",
			display: true,
			page: 1,
			id: "calendly",
			required: true,
			hideFieldLabel: false,
			width: "full",
			conditions: [],
			calendlyProps: {
				hideEventTypeDetails: false,
			},
			calendlyUrl:
				"https://calendly.com/niketan-bplx/30min?month=2023-10",
		},
		{
			component: "special_input",
			type: "cal",
			label: "Schedule a meeting (Cal.com)",
			instructions:
				"You can schedule a meeting with me by clicking the button above.",
			title: "Schedule a meeting (Cal.com)",
			placeholder: "Schedule a meeting (Cal.com)",
			page: 1,
			id: "calcom",
			display: true,
			required: true,
			calLink: "nikketan/15min",
			hideFieldLabel: false,
			width: "full",
			conditions: [],
		},
	],
};

import { NextApiRequest, NextApiResponse } from "next";

const handler = async (_req: NextApiRequest, res: NextApiResponse) => {
	return res.status(200).json(schema);
};

export default handler;
